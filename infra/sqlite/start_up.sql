DROP TABLE IF EXISTS Tasks;
DROP TABLE IF EXISTS Questions;
DROP TABLE IF EXISTS Users;
DROP TABLE IF EXISTS Subscribes;
DROP TABLE IF EXISTS MultipleChoiceQuestion;
DROP TABLE if exists ReadingTask;
DROP TABLE IF EXISTS MatchParagraphsTask;
DROP TABLE IF EXISTS ListeningTask;
DROP TABLE IF EXISTS FillTextTask;
DROP TABLE IF EXISTS FillTextWithoutOptionsTask;
DROP TABLE IF EXISTS ConversationTask;
DROP TABLE IF EXISTS Exams;
DROP TABLE IF EXISTS OpenQuestion;
DROP TABLE IF EXISTS EmailQuestion;
DROP TABLE IF EXISTS EssayQuestion;

CREATE TABLE Subscribes
(
    ID              INTEGER PRIMARY KEY AUTOINCREMENT,
    SUBSCRIBE_TYPE  TEXT    NOT NULL,
    SUBSCRIBE_PRICE FLOAT   NOT NULL,
    TRIAL_DAY       INTEGER NOT NULL
);

CREATE TABLE Users
(
    ID                   INTEGER PRIMARY KEY AUTOINCREMENT,
    USERNAME             TEXT NOT NULL UNIQUE,
    EMAIL                TEXT NOT NULL UNIQUE,
    PASSWORD             TEXT NOT NULL UNIQUE,
    SUBSCRIBE_ID         INTEGER,
    START_SUBSCRIBE_DATE DATE,
    END_SUBSCRIBE_DATE   DATE

);

---------------------------------------------------------------
CREATE TABLE Exams
(
    EXAM_ID INTEGER PRIMARY KEY AUTOINCREMENT,
    YEAR    INTEGER NOT NULL,
    VARIANT INTEGER NOT NULL,
    SUBJECT TEXT    NOT NULL
);

CREATE TABLE Tasks
(
    TASK_ID     INTEGER PRIMARY KEY AUTOINCREMENT,
    TASK_NUMBER INTEGER NOT NULL,
    TASK_TITLE  TEXT    NOT NULL,
    TASK_POINT  INTEGER NOT NULL,
    TASK_TYPE   TEXT    NOT NULL,
    EXAM_ID     INTEGER NOT NULL,
    FOREIGN KEY (EXAM_ID) REFERENCES Exams (EXAM_ID) ON DELETE CASCADE
);

CREATE TABLE ListeningTask
(
    TASK_ID          INTEGER PRIMARY KEY,
    ADDRESS_TO_AUDIO TEXT,
    TEXT_NUM         INTEGER default 1,
    FOREIGN KEY (TASK_ID) REFERENCES Tasks (TASK_ID) ON DELETE CASCADE
);
CREATE TABLE MatchParagraphsTask
(
    TASK_ID    INTEGER PRIMARY KEY,
    TEXT_TITLE TEXT,
    PARAGRAPHS TEXT,
    FOREIGN KEY (TASK_ID) REFERENCES Tasks (TASK_ID) ON DELETE CASCADE
);
CREATE TABLE ReadingTask
(
    TASK_ID    INTEGER PRIMARY KEY,
    TEXT_TITLE TEXT,
    TEXT       TEXT,
    FOREIGN KEY (TASK_ID) REFERENCES Tasks (TASK_ID) ON DELETE CASCADE
);

CREATE TABLE FillTextTask
(
    TASK_ID    INTEGER PRIMARY KEY,
    TEXT_TITLE TEXT,
    TEXT       TEXT,
    OPTIONS    TEXT,
    FOREIGN KEY (TASK_ID) REFERENCES Tasks (TASK_ID) ON DELETE CASCADE
);

CREATE TABLE FillTextWithoutOptionsTask
(
    TASK_ID    INTEGER PRIMARY KEY,
    TEXT_TITLE TEXT,
    TEXT       TEXT,
    FOREIGN KEY (TASK_ID) REFERENCES Tasks (TASK_ID) ON DELETE CASCADE
);

CREATE TABLE ConversationTask
(
    TASK_ID    INTEGER PRIMARY KEY,
    TEXT_TITLE TEXT,
    TEXT       TEXT,
    DIALOGUES  TEXT,
    FOREIGN KEY (TASK_ID) REFERENCES Tasks (TASK_ID) ON DELETE CASCADE
);

---------------------------------------------------------------
CREATE TABLE Questions
(
    QUESTION_ID INTEGER PRIMARY KEY AUTOINCREMENT,
    TASK_ID     INTEGER NOT NULL,
    FOREIGN KEY (TASK_ID) REFERENCES Tasks (TASK_ID) ON DELETE CASCADE
);

CREATE TABLE MultipleChoiceQuestion
(
    QUESTION_ID      INTEGER PRIMARY KEY,
    QUESTION_OPTIONS TEXT,
    QUESTION_ANSWER  TEXT,
    QUESTION_TEXT    TEXT,
    FOREIGN KEY (QUESTION_ID) REFERENCES Questions (QUESTION_ID) ON DELETE CASCADE

);

CREATE TABLE OpenQuestion
(
    QUESTION_ID     INTEGER PRIMARY KEY,
    QUESTION        TEXT DEFAULT '',
    CORRECT_ANSWERS TEXT,
    FOREIGN KEY (QUESTION_ID) REFERENCES Questions (QUESTION_ID) ON DELETE CASCADE
);

CREATE TABLE EmailQuestion
(
    QUESTION_ID        INTEGER PRIMARY KEY,
    TEXT_TITLE         TEXT,
    TEXT               TEXT,
    ASKING_INFORMATION TEXT,
    FOREIGN KEY (QUESTION_ID) REFERENCES Questions (QUESTION_ID) ON DELETE CASCADE
);

CREATE TABLE EssayQuestion
(
    QUESTION_ID INTEGER PRIMARY KEY,
    ESSAY_TITLE TEXT,
    FOREIGN KEY (QUESTION_ID) REFERENCES Questions (QUESTION_ID) ON DELETE CASCADE
);





