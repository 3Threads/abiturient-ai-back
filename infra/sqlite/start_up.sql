DROP TABLE IF EXISTS TASKS;
DROP TABLE IF EXISTS QUESTIONS;
DROP TABLE IF EXISTS USERS;
DROP TABLE IF EXISTS SUBSCRIBE;
DROP TABLE IF EXISTS MultipleChoiceQuestion;
DROP TABLE IF EXISTS FillWithArticlesQuestion;
DROP TABLE IF EXISTS TitlingQuestion;
DROP TABLE IF EXISTS FillTextQuestion;


CREATE TABLE SUBSCRIBE
(
    ID              INTEGER PRIMARY KEY AUTOINCREMENT,
    SUBSCRIBE_TYPE  TEXT    NOT NULL,
    SUBSCRIBE_PRICE FLOAT   NOT NULL,
    TRIAL_DAY       INTEGER NOT NULL
);
CREATE TABLE USERS
(
    ID                   INTEGER PRIMARY KEY AUTOINCREMENT,
    USERNAME             TEXT    NOT NULL UNIQUE,
    EMAIL                TEXT    NOT NULL UNIQUE,
    PASSWORD             TEXT    NOT NULL UNIQUE,
    SUBSCRIBE_ID         INTEGER,
    START_SUBSCRIBE_DATE DATE,
    END_SUBSCRIBE_DATE   DATE

);
CREATE TABLE TASKS
(
    ID           INTEGER PRIMARY KEY AUTOINCREMENT,
    TASK_NUM     INTEGER      NOT NULL,
    TASK_TITLE   TEXT         NOT NULL,
    TASK_TEXT    TEXT,
    TASK_OPTIONS TEXT,
    POINT        INTEGER      NOT NULL,
    TASK_TYPE    TEXT         NOT NULL,
    YEAR         INTEGER TEXT NOT NULL,
    VARIANT      INTEGER      NOT NULL,
    SUBJECT      TEXT         NOT NULL
);

CREATE TABLE MultipleChoiceQuestion
(
    QUESTION_ID      INTEGER PRIMARY KEY AUTOINCREMENT,
    TASK_ID          INTEGER NOT NULL,
    QUESTION_TEXT    TEXT,
    QUESTION_OPTIONS TEXT,
    QUESTION_ANSWER  TEXT,
    FOREIGN KEY (TASK_ID) REFERENCES TASKS (ID) ON DELETE CASCADE
);


CREATE TABLE FillWithArticlesQuestion
(
    QUESTION_ID    INTEGER PRIMARY KEY AUTOINCREMENT,
    TASK_ID        INTEGER NOT NULL,
    CORRECT_ANSWER TEXT,
    FOREIGN KEY (TASK_ID) REFERENCES TASKS (ID) ON DELETE CASCADE
);


CREATE TABLE TitlingQuestion
(
    QUESTION_ID     INTEGER PRIMARY KEY AUTOINCREMENT,
    TASK_ID         INTEGER NOT NULL,
    TITLE       TEXT,
    CORRECT_ANSWERS TEXT,
    FOREIGN KEY (TASK_ID) REFERENCES TASKS (ID) ON DELETE CASCADE
);


CREATE TABLE FillTextQuestion
(
    QUESTION_ID    INTEGER PRIMARY KEY AUTOINCREMENT,
    TASK_ID        INTEGER NOT NULL,
    CORRECT_ANSWER TEXT,
    FOREIGN KEY (TASK_ID) REFERENCES TASKS (ID) ON DELETE CASCADE
);
